{"ast":null,"code":"import React,{useEffect,useRef}from'react';import{Container,Row,Col,Button}from'react-bootstrap';import{socket}from'../utils/socket';// Ensure the import path is correct\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Stargate=()=>{const videoRef=useRef(null);useEffect(()=>{// Define roomName inside useEffect to ensure it's captured in the cleanup function's closure\nconst roomName='stargate-room';// Make this dynamic as needed\nconst getMedia=async()=>{try{const stream=await navigator.mediaDevices.getUserMedia({video:true,audio:true});if(videoRef.current){videoRef.current.srcObject=stream;}socket.emit('join-stream',roomName);// Setup WebRTC signaling logic here\n}catch(error){console.error('Error accessing media devices:',error);}};getMedia();// Capture the current value of videoRef.current for use in the cleanup function\nconst currentVideoRef=videoRef.current;return()=>{if(currentVideoRef&&currentVideoRef.srcObject){const tracks=currentVideoRef.srcObject.getTracks();tracks.forEach(track=>track.stop());currentVideoRef.srcObject=null;}socket.emit('leave-stream',roomName);// Use captured roomName\n// Remove socket event listeners here to prevent memory leaks\n};},[]);// Empty dependency array means this effect runs once on mount\nreturn/*#__PURE__*/_jsx(Container,{children:/*#__PURE__*/_jsx(Row,{className:\"justify-content-md-center mt-5\",children:/*#__PURE__*/_jsxs(Col,{md:8,children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Stargate: Live Astrology Chat\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Connect with astrologers and enthusiasts in real-time discussions.\"}),/*#__PURE__*/_jsx(\"div\",{className:\"live-stream\",children:/*#__PURE__*/_jsx(\"video\",{ref:videoRef,autoPlay:true,playsInline:true,muted:true,style:{width:'100%'}})}),/*#__PURE__*/_jsx(Button,{variant:\"primary\",children:\"Join Live Chat\"})]})})});};export default Stargate;","map":{"version":3,"names":["React","useEffect","useRef","Container","Row","Col","Button","socket","jsx","_jsx","jsxs","_jsxs","Stargate","videoRef","roomName","getMedia","stream","navigator","mediaDevices","getUserMedia","video","audio","current","srcObject","emit","error","console","currentVideoRef","tracks","getTracks","forEach","track","stop","children","className","md","ref","autoPlay","playsInline","muted","style","width","variant"],"sources":["/Users/dn5v/.bin/git/github/gpt-pilot/workspace/starfires_v2/starfires_v2_frontend/src/pages/Stargate.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport { Container, Row, Col, Button } from 'react-bootstrap';\nimport { socket } from '../utils/socket'; // Ensure the import path is correct\n\nconst Stargate = () => {\n    const videoRef = useRef(null);\n\n    useEffect(() => {\n        // Define roomName inside useEffect to ensure it's captured in the cleanup function's closure\n        const roomName = 'stargate-room'; // Make this dynamic as needed\n\n        const getMedia = async () => {\n            try {\n                const stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: true });\n                if (videoRef.current) {\n                    videoRef.current.srcObject = stream;\n                }\n                socket.emit('join-stream', roomName);\n\n                // Setup WebRTC signaling logic here\n            } catch (error) {\n                console.error('Error accessing media devices:', error);\n            }\n        };\n\n        getMedia();\n\n        // Capture the current value of videoRef.current for use in the cleanup function\n        const currentVideoRef = videoRef.current;\n\n        return () => {\n            if (currentVideoRef && currentVideoRef.srcObject) {\n                const tracks = currentVideoRef.srcObject.getTracks();\n                tracks.forEach(track => track.stop());\n                currentVideoRef.srcObject = null;\n            }\n            socket.emit('leave-stream', roomName); // Use captured roomName\n            // Remove socket event listeners here to prevent memory leaks\n        };\n    }, []); // Empty dependency array means this effect runs once on mount\n\n    return (\n        <Container>\n            <Row className=\"justify-content-md-center mt-5\">\n                <Col md={8}>\n                    <h1>Stargate: Live Astrology Chat</h1>\n                    <p>Connect with astrologers and enthusiasts in real-time discussions.</p>\n                    <div className=\"live-stream\">\n                        <video ref={videoRef} autoPlay playsInline muted style={{ width: '100%' }}></video>\n                    </div>\n                    <Button variant=\"primary\">Join Live Chat</Button>\n                </Col>\n            </Row>\n            {/* Additional content and components specific to Stargate */}\n        </Container>\n    );\n};\n\nexport default Stargate;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,MAAM,KAAQ,OAAO,CAChD,OAASC,SAAS,CAAEC,GAAG,CAAEC,GAAG,CAAEC,MAAM,KAAQ,iBAAiB,CAC7D,OAASC,MAAM,KAAQ,iBAAiB,CAAE;AAAA,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAE1C,KAAM,CAAAC,QAAQ,CAAGA,CAAA,GAAM,CACnB,KAAM,CAAAC,QAAQ,CAAGX,MAAM,CAAC,IAAI,CAAC,CAE7BD,SAAS,CAAC,IAAM,CACZ;AACA,KAAM,CAAAa,QAAQ,CAAG,eAAe,CAAE;AAElC,KAAM,CAAAC,QAAQ,CAAG,KAAAA,CAAA,GAAY,CACzB,GAAI,CACA,KAAM,CAAAC,MAAM,CAAG,KAAM,CAAAC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC,CAAEC,KAAK,CAAE,IAAI,CAAEC,KAAK,CAAE,IAAK,CAAC,CAAC,CACtF,GAAIR,QAAQ,CAACS,OAAO,CAAE,CAClBT,QAAQ,CAACS,OAAO,CAACC,SAAS,CAAGP,MAAM,CACvC,CACAT,MAAM,CAACiB,IAAI,CAAC,aAAa,CAAEV,QAAQ,CAAC,CAEpC;AACJ,CAAE,MAAOW,KAAK,CAAE,CACZC,OAAO,CAACD,KAAK,CAAC,gCAAgC,CAAEA,KAAK,CAAC,CAC1D,CACJ,CAAC,CAEDV,QAAQ,CAAC,CAAC,CAEV;AACA,KAAM,CAAAY,eAAe,CAAGd,QAAQ,CAACS,OAAO,CAExC,MAAO,IAAM,CACT,GAAIK,eAAe,EAAIA,eAAe,CAACJ,SAAS,CAAE,CAC9C,KAAM,CAAAK,MAAM,CAAGD,eAAe,CAACJ,SAAS,CAACM,SAAS,CAAC,CAAC,CACpDD,MAAM,CAACE,OAAO,CAACC,KAAK,EAAIA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC,CACrCL,eAAe,CAACJ,SAAS,CAAG,IAAI,CACpC,CACAhB,MAAM,CAACiB,IAAI,CAAC,cAAc,CAAEV,QAAQ,CAAC,CAAE;AACvC;AACJ,CAAC,CACL,CAAC,CAAE,EAAE,CAAC,CAAE;AAER,mBACIL,IAAA,CAACN,SAAS,EAAA8B,QAAA,cACNxB,IAAA,CAACL,GAAG,EAAC8B,SAAS,CAAC,gCAAgC,CAAAD,QAAA,cAC3CtB,KAAA,CAACN,GAAG,EAAC8B,EAAE,CAAE,CAAE,CAAAF,QAAA,eACPxB,IAAA,OAAAwB,QAAA,CAAI,+BAA6B,CAAI,CAAC,cACtCxB,IAAA,MAAAwB,QAAA,CAAG,oEAAkE,CAAG,CAAC,cACzExB,IAAA,QAAKyB,SAAS,CAAC,aAAa,CAAAD,QAAA,cACxBxB,IAAA,UAAO2B,GAAG,CAAEvB,QAAS,CAACwB,QAAQ,MAACC,WAAW,MAACC,KAAK,MAACC,KAAK,CAAE,CAAEC,KAAK,CAAE,MAAO,CAAE,CAAQ,CAAC,CAClF,CAAC,cACNhC,IAAA,CAACH,MAAM,EAACoC,OAAO,CAAC,SAAS,CAAAT,QAAA,CAAC,gBAAc,CAAQ,CAAC,EAChD,CAAC,CACL,CAAC,CAEC,CAAC,CAEpB,CAAC,CAED,cAAe,CAAArB,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}