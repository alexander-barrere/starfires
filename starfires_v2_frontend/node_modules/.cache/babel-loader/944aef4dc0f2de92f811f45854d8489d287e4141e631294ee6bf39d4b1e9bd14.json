{"ast":null,"code":"var _jsxFileName = \"/Users/dn5v/.bin/git/github/gpt-pilot/workspace/starfires_v2/starfires_v2_frontend/src/components/Cart.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport CartItem from './CartItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Cart = () => {\n  _s();\n  const [cartItems, setCartItems] = useState([]);\n  useEffect(() => {\n    let savedCartItems = JSON.parse(localStorage.getItem('cartItems')) || [];\n    setCartItems(savedCartItems);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('cartItems', JSON.stringify(cartItems));\n  }, [cartItems]);\n  const removeFromCart = productId => {\n    const updatedCartItems = cartItems.filter(item => item._id !== productId);\n    setCartItems(updatedCartItems);\n  };\n  const updateQuantity = (productId, newQuantity) => {\n    const updatedCartItems = cartItems.map(item => {\n      if (item._id === productId) {\n        return {\n          ...item,\n          quantity: newQuantity\n        };\n      }\n      return item;\n    });\n    setCartItems(updatedCartItems);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Your Cart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), cartItems.map(item => /*#__PURE__*/_jsxDEV(CartItem, {\n      item: item,\n      updateQuantity: updateQuantity,\n      removeFromCart: removeFromCart\n    }, item._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Cart, \"jdONvkEabzLc64SbXgqXBHRMg9M=\");\n_c = Cart;\nexport default Cart;\nvar _c;\n$RefreshReg$(_c, \"Cart\");","map":{"version":3,"names":["React","useState","useEffect","CartItem","jsxDEV","_jsxDEV","Cart","_s","cartItems","setCartItems","savedCartItems","JSON","parse","localStorage","getItem","setItem","stringify","removeFromCart","productId","updatedCartItems","filter","item","_id","updateQuantity","newQuantity","map","quantity","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/dn5v/.bin/git/github/gpt-pilot/workspace/starfires_v2/starfires_v2_frontend/src/components/Cart.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport CartItem from './CartItem';\n\nconst Cart = () => {\n  const [cartItems, setCartItems] = useState([]);\n  \n  useEffect(() => {\n    let savedCartItems = JSON.parse(localStorage.getItem('cartItems')) || [];\n    setCartItems(savedCartItems);\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem('cartItems', JSON.stringify(cartItems));\n  }, [cartItems]);\n\n  const removeFromCart = (productId) => {\n    const updatedCartItems = cartItems.filter(item => item._id !== productId);\n    setCartItems(updatedCartItems);\n  };\n\n  const updateQuantity = (productId, newQuantity) => {\n    const updatedCartItems = cartItems.map(item => {\n      if (item._id === productId) {\n        return { ...item, quantity: newQuantity };\n      }\n      return item;\n    });\n    setCartItems(updatedCartItems);\n  };\n\n  return (\n    <div>\n      <h2>Your Cart</h2>\n      {cartItems.map(item => (\n        <CartItem key={item._id} item={item} updateQuantity={updateQuantity} removeFromCart={removeFromCart} />\n      ))}\n      {/* Add checkout button and other functionalities as needed */}\n    </div>\n  );\n};\n\nexport default Cart;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAE9CC,SAAS,CAAC,MAAM;IACd,IAAIQ,cAAc,GAAGC,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,IAAI,EAAE;IACxEL,YAAY,CAACC,cAAc,CAAC;EAC9B,CAAC,EAAE,EAAE,CAAC;EAENR,SAAS,CAAC,MAAM;IACdW,YAAY,CAACE,OAAO,CAAC,WAAW,EAAEJ,IAAI,CAACK,SAAS,CAACR,SAAS,CAAC,CAAC;EAC9D,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;EAEf,MAAMS,cAAc,GAAIC,SAAS,IAAK;IACpC,MAAMC,gBAAgB,GAAGX,SAAS,CAACY,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACC,GAAG,KAAKJ,SAAS,CAAC;IACzET,YAAY,CAACU,gBAAgB,CAAC;EAChC,CAAC;EAED,MAAMI,cAAc,GAAGA,CAACL,SAAS,EAAEM,WAAW,KAAK;IACjD,MAAML,gBAAgB,GAAGX,SAAS,CAACiB,GAAG,CAACJ,IAAI,IAAI;MAC7C,IAAIA,IAAI,CAACC,GAAG,KAAKJ,SAAS,EAAE;QAC1B,OAAO;UAAE,GAAGG,IAAI;UAAEK,QAAQ,EAAEF;QAAY,CAAC;MAC3C;MACA,OAAOH,IAAI;IACb,CAAC,CAAC;IACFZ,YAAY,CAACU,gBAAgB,CAAC;EAChC,CAAC;EAED,oBACEd,OAAA;IAAAsB,QAAA,gBACEtB,OAAA;MAAAsB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACjBvB,SAAS,CAACiB,GAAG,CAACJ,IAAI,iBACjBhB,OAAA,CAACF,QAAQ;MAAgBkB,IAAI,EAAEA,IAAK;MAACE,cAAc,EAAEA,cAAe;MAACN,cAAc,EAAEA;IAAe,GAArFI,IAAI,CAACC,GAAG;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAA+E,CACvG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEC,CAAC;AAEV,CAAC;AAACxB,EAAA,CApCID,IAAI;AAAA0B,EAAA,GAAJ1B,IAAI;AAsCV,eAAeA,IAAI;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}