{
  "endpoint": "OPENAI",
  "model": "gpt-4-1106-preview",
  "functions": [
    {
      "name": "get_fully_coded_file",
      "description": "Gets the fully coded file.",
      "parameters": {
        "type": "object",
        "properties": {
          "file_content": {
            "type": "string",
            "description": "Fully coded file. This contains only the lines of code and no other text."
          }
        },
        "required": [
          "file_content"
        ]
      }
    }
  ],
  "response": {
    "file_content": "const Product = require('../models/Product');\n\nexports.getProducts = async (req, res) => {\n  try {\n    const products = await Product.find({});\n    res.json(products);\n  } catch (error) {\n    console.error(error);\n    res.status(500).send('Server Error');\n  }\n};\n\nexports.getProductById = async (req, res) => {\n  try {\n    const product = await Product.findById(req.params.id);\n    if (!product) {\n      return res.status(404).send('Product not found');\n    }\n    res.json(product);\n  } catch (error) {\n    console.error(error);\n    res.status(500).send('Server Error');\n  }\n};\n\nexports.createProduct = async (req, res) => {\n  const { title, description, price, imageUrl } = req.body;\n\n  try {\n    let newProduct = new Product({\n      title,\n      description,\n      price,\n      imageUrl\n    });\n\n    const savedProduct = await newProduct.save();\n    res.json(savedProduct);\n  } catch (error) {\n    console.error(error);\n    res.status(500).send('Server Error');\n  }\n};\n\nexports.updateProduct = async (req, res) => {\n  const { title, description, price, imageUrl } = req.body;\n\n  try {\n    let product = await Product.findById(req.params.id);\n    if (!product) {\n      return res.status(404).send('Product not found');\n    }\n\n    product.title = title;\n    product.description = description;\n    product.price = price;\n    product.imageUrl = imageUrl;\n\n    await product.save();\n    res.json(product);\n  } catch (error) {\n    console.error(error);\n    res.status(500).send('Server Error');\n  }\n};\n\nexports.deleteProduct = async (req, res) => {\n  try {\n    const product = await Product.findById(req.params.id);\n    if (!product) {\n      return res.status(404).send('Product not found');\n    }\n\n    await product.remove();\n    res.json({ msg: 'Product removed' });\n  } catch (error) {\n    console.error(error);\n    res.status(500).send('Server Error');\n  }\n};\n"
  }
}